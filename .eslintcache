[{"/home/vero/changeProject/example-portfolio/src/index.js":"1","/home/vero/changeProject/example-portfolio/src/serviceWorker.js":"2","/home/vero/changeProject/example-portfolio/src/App.js":"3","/home/vero/changeProject/example-portfolio/src/components/pages/Experience.js":"4","/home/vero/changeProject/example-portfolio/src/components/pages/Main.js":"5","/home/vero/changeProject/example-portfolio/src/components/pages/Contact.js":"6","/home/vero/changeProject/example-portfolio/src/components/Navbar/Navbar.js":"7","/home/vero/changeProject/example-portfolio/src/components/pages/About.js":"8","/home/vero/changeProject/example-portfolio/src/components/Forms/ContactMeForm.js":"9","/home/vero/changeProject/example-portfolio/src/components/services/ContactMeService.js":"10","/home/vero/changeProject/example-portfolio/src/components/TypingEffect/TypingEffect.js":"11"},{"size":594,"mtime":1610822474423,"results":"12","hashOfConfig":"13"},{"size":5086,"mtime":1610822474423,"results":"14","hashOfConfig":"13"},{"size":962,"mtime":1610822474419,"results":"15","hashOfConfig":"13"},{"size":15869,"mtime":1610829206614,"results":"16","hashOfConfig":"13"},{"size":909,"mtime":1610822474419,"results":"17","hashOfConfig":"13"},{"size":1980,"mtime":1610822474419,"results":"18","hashOfConfig":"13"},{"size":1342,"mtime":1610823018833,"results":"19","hashOfConfig":"13"},{"size":16527,"mtime":1610829510112,"results":"20","hashOfConfig":"13"},{"size":1305,"mtime":1610822474419,"results":"21","hashOfConfig":"13"},{"size":440,"mtime":1610822474419,"results":"22","hashOfConfig":"13"},{"size":444,"mtime":1610827642118,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15uz2wf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/vero/changeProject/example-portfolio/src/index.js",[],["50","51"],"/home/vero/changeProject/example-portfolio/src/serviceWorker.js",[],"/home/vero/changeProject/example-portfolio/src/App.js",[],"/home/vero/changeProject/example-portfolio/src/components/pages/Experience.js",[],"/home/vero/changeProject/example-portfolio/src/components/pages/Main.js",["52","53","54"],"import React, { useState } from \"react\";\nimport TypingEffect from \"../TypingEffect/TypingEffect\";\nimport useContactMeForm from \"../Forms/ContactMeForm\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Main() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // useEffect(() =>\n  //   fetch(\"https://api/contact-me/\")\n  //     .then((res) => res.json())\n  //     .then((res) => this.setState({ message: res }))\n  //     .catch(() => this.setState({ hasErrors: true }))\n  // );\n  return (\n    <>\n      <div className=\"container\">\n        <TypingEffect />\n      </div>\n      <div className=\"button-contact\">\n        {/* <button \n        className=\"btn\" \n        onClick={() => setIsModalOpen(true)}\n        >\n          Contact Me\n        </button> */}\n        <button className=\"btn\">\n          <Link to=\"/contact-me\">Contact Me</Link>\n        </button>\n      </div>\n    </>\n  );\n}\n","/home/vero/changeProject/example-portfolio/src/components/pages/Contact.js",["55"],"import React from \"react\";\nimport CONTACTME_SERVICE from \"../services/ContactMeService\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Contact() {\n  const { register, handleSubmit, watch, errors } = useForm({\n    defaultValues: {\n      subject: \"\",\n      email: \"\",\n      message: \"\",\n    },\n  });\n\n  const saveMessage = (data, e) => {\n    const filledForm = {\n      subject: data.subject,\n      email: data.email,\n      message: data.message,\n    };\n    CONTACTME_SERVICE.message(filledForm);\n    e.target.reset(e);\n  };\n\n  return (\n    <>\n      <div className=\"form-message\">\n        <form onSubmit={handleSubmit(saveMessage)} className=\"contact-me-form\">\n          <label htmlFor=\"subject\" className=\"label\">\n            Subject:\n          </label>\n          <input\n            aria-invalid={errors.name ? \"true\" : \"false\"}\n            className=\"input\"\n            name=\"subject\"\n            type=\"text\"\n            placeholder=\"Subject\"\n            ref={register({ required: true })}\n          ></input>\n          {errors.subject && <span>This field is required</span>}\n\n          <label htmlFor=\"email\" className=\"label\">\n            Email:\n          </label>\n          <input\n            className=\"input\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            ref={register({ required: true })}\n          />\n          {errors.email && <span>This field is required</span>}\n\n          <label htmlFor=\"message\" className=\"label\">\n            Message:\n          </label>\n          <textarea\n            className=\"input\"\n            rows=\"5\"\n            cols=\"50\"\n            id=\"message\"\n            name=\"message\"\n            type=\"text\"\n            placeholder=\"Enter your message\"\n            ref={register({ required: true })}\n          />\n          {errors.message && <span>This field is required</span>}\n          <button className=\"btn sm\">Send message!</button>\n        </form>\n      </div>\n    </>\n  );\n}\n","/home/vero/changeProject/example-portfolio/src/components/Navbar/Navbar.js",[],"/home/vero/changeProject/example-portfolio/src/components/pages/About.js",[],"/home/vero/changeProject/example-portfolio/src/components/Forms/ContactMeForm.js",["56","57"],"import { useState, useEffect, useRef } from \"react\";\n\nexport default function ContactMeForm({ initialValues, onSubmit }) {\n  console.log(\"My first custom hook\");\n  const [values, setValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [onSubmitting, setOnSubmitting] = useState(false);\n  const [onBlur, setOnBlur] = useState(false);\n\n  const formRendered = useRef(true);\n\n  useEffect(() => {\n    if (!formRendered.current) {\n      setValues(initialValues);\n      setErrors({});\n      setTouched({});\n      setOnSubmitting(false);\n      setOnBlur(false);\n    }\n    formRendered.current = false;\n  }, [initialValues]);\n\n  const handleChange = (event) => {\n    const { target } = event;\n    const { name, value } = target;\n    event.persist();\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleBlur = (event) => {\n    const { target } = event;\n    const { name } = target;\n    setTouched({ ...touched, [name]: true });\n    setErrors({ ...errors });\n  };\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors({ ...errors });\n    onSubmit({ values, errors });\n  };\n\n  return {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  };\n}\n","/home/vero/changeProject/example-portfolio/src/components/services/ContactMeService.js",[],"/home/vero/changeProject/example-portfolio/src/components/TypingEffect/TypingEffect.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":21},{"ruleId":"62","severity":1,"message":"67","line":7,"column":23,"nodeType":"64","messageId":"65","endLine":7,"endColumn":37},{"ruleId":"62","severity":1,"message":"68","line":6,"column":35,"nodeType":"64","messageId":"65","endLine":6,"endColumn":40},{"ruleId":"62","severity":1,"message":"69","line":8,"column":10,"nodeType":"64","messageId":"65","endLine":8,"endColumn":22},{"ruleId":"62","severity":1,"message":"70","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":16},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useContactMeForm' is defined but never used.","Identifier","unusedVar","'isModalOpen' is assigned a value but never used.","'setIsModalOpen' is assigned a value but never used.","'watch' is assigned a value but never used.","'onSubmitting' is assigned a value but never used.","'onBlur' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]